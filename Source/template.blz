import FileSystem
require response
constructor StaticTemplate(filepath)

    handle = open(filepath)
    contents = handle.read_all()
    handle.close()

    html? = filepath.contains?(".html")
    json? = filepath.contains?(".json")
    if html?
        type = "text/html"
    else if json?
        type = "application/json"
    else
        type = "text/plain"
    else

    end

    :render
        headers = {}
        headers["Content-Type"] = type
        Response(contents, headers, 200)
    end
end

constructor FindAndReplaceTemplate(filepath)

    handle = open(filepath)
    contents = handle.read_all()
    handle.close()

    html? = filepath.contains?(".html")
    json? = filepath.contains?(".json")
    if html?
        type = "text/html"
    else if json?
        type = "application/json"
    else
        type = "text/plain"
    else

    end

    :render(map)
        local_contents = copy(contents)
        if map.type == "HashMap"
            keys = map.keys()
            for i = 0; i < keys.length(); i++
                local_contents.replace!(keys[i], map[keys[i]])
            end
        end
        headers = {}
        headers["Content-Type"] = type
        Response(local_contents, headers, 200)
    end
end